import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useEffect, useRef, useState} from "react";
import swap from "../util/swap";
import regenerate from "../util/regenerate";
import {isSorted} from "../util/helperMethods";
import {setColor} from "../util/animationHelperMethods";
import Sort from "../components/Sort";

export default function Home() {
    // Variables
    const [numberRectangles, setNumberRectangles] = useState(12)
    const [delay, setDelay] = useState(500)
    const [arr, setArr] = useState([])
    const [active, setActive] = useState(false)
    const delayRef = useRef()
    delayRef.current = delay
    let lastIndex = arr.length - 1
    let setLastIndex = (index) => {
        lastIndex = index
    }


    // Regenerating rectangles
    useEffect(() => {
        regenerate(active, numberRectangles, setArr, setLastIndex)
    }, [numberRectangles])


    let partition = async (low, high) => {
        let pivot = arr[high].props.height
        let i = low - 1

        for (let j = low; j <= high - 1; j++) {
            if (arr[j].props.height < pivot) {
                i++;
                if (i !== j) {
                    console.log('swapping ' + i +' and ' + j)
                    await swap(i, j, arr, setArr, delayRef, lastIndex, setLastIndex);
                }
            }
        }
        if (i + 1 !== high) {
            console.log('SWAPPING LAST ' + (i + 1) +' and ' + high)
            await swap(i + 1, high, arr, setArr, delayRef, lastIndex, setLastIndex);
        }
        return i + 1;
    }

    let quicksortHelper = async (low, high) => {
        if (low < high) {
            let partitionIndex = await partition(low, high);
            await quicksortHelper(low, partitionIndex - 1);
            await quicksortHelper(partitionIndex + 1, high);
        }
    }

    let quicksort = async () => {
        if (isSorted(arr)) return
        setActive(true)
        await quicksortHelper(0, arr.length - 1)

        // Set all green
        for (let i = 0; i < arr.length; i++) {
            arr[i] = setColor(arr[i], '#00ee3f')
            setArr([...arr])
        }
        setActive(false)
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Quick Sort Visualizer</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Sort
                setNumberRectangles={setNumberRectangles}
                setDelay={setDelay}
                active={active}
                numberRectangles={numberRectangles}
                arr={arr}
                setArr={setArr}
                setLastIndex={setLastIndex}
                sortingMethod={quicksort}
            />
        </div>
    )
}
