import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useEffect, useRef, useState} from "react";
import swap from "../util/swap";
import regenerate from "../util/regenerate";
import {isSorted} from "../util/helperMethods";
import {setAllGreen, setColor} from "../util/animationHelperMethods";
import Sort from "../components/Sort";

export default function Home() {
    // Variables
    const [numberRectangles, setNumberRectangles] = useState(12)
    const [delay, setDelay] = useState(500)
    const [arr, setArr] = useState([])
    const [active, setActive] = useState(false)
    const delayRef = useRef()
    delayRef.current = delay
    let lastIndex = arr.length - 1
    let setLastIndex = (index) => {
        lastIndex = index
    }


    // Regenerating rectangles
    useEffect(() => {
        regenerate(active, numberRectangles, setArr, setLastIndex)
    }, [numberRectangles])


    let bubbleSort = async () => {
        if (isSorted(arr)) {
            setAllGreen(arr, setArr)
            return
        }

        setActive(true)
        for (let i = 0; i < arr.length - 1; i++) {
            let swapped = false
            for (let j = 0; j < arr.length - i - 1; j++) {
                let shouldSwap = arr[j].props.height > arr[j+1].props.height
                if (shouldSwap) {
                    swapped = true;
                }
                await swap(j, j+1, arr, setArr, delayRef, lastIndex, setLastIndex, shouldSwap, true)
            }

            if (!swapped) {
                setAllGreen(arr, setArr)
                break;
            }
        }
        setActive(false)
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Bubble Sort Visualizer</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Sort
                setNumberRectangles={setNumberRectangles}
                setDelay={setDelay}
                active={active}
                numberRectangles={numberRectangles}
                arr={arr}
                setArr={setArr}
                setLastIndex={setLastIndex}
                sortingMethod={bubbleSort}
            />
        </div>
    )
}
